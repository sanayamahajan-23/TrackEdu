/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.trackedu;

/**
 *
 * @author divya
 */
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.sql.*;
public class TimetableViewerA extends javax.swing.JFrame {

    /**
     * Creates new form TimetableViewerA
     */
      private JTable table;
    private DefaultTableModel model;
    private Connection conn;
    public TimetableViewerA() {
        setTitle("Timetable Viewer");
        setSize(817, 477);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);

        // Initialize Database Connection
        if (connectToDatabase()) {
            // If connected, load the timetable data
            initializeTableModel();
            loadTimetableData();
        } else {
            // If database connection failed, show an error message
            JOptionPane.showMessageDialog(this, "Failed to connect to the database.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        setVisible(true);
    }

    // Connect to the database
    private boolean connectToDatabase() {
        try {
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/college", "root", "admin");
            System.out.println("Database connected successfully.");
            return true;
        } catch (SQLException e) {
            e.printStackTrace();
            return false;
        }
    }

    // Set up the table model
    private void initializeTableModel() {
        // Column headers
        String[] columns = {"Time Slot", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday"};

        // Create a non-editable model
        model = new DefaultTableModel(columns, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;  // Make cells non-editable
            }
        };

        // Initialize table with model and add it to JScrollPane
        table = new JTable(model);
        table.setFillsViewportHeight(true);
        JScrollPane scrollPane = new JScrollPane(table);
        add(scrollPane, BorderLayout.CENTER);
    }

    // Load timetable data from the database into JTable
    private void loadTimetableData() {
       
            try (Statement stmt = conn.createStatement()) {
                ResultSet rs = stmt.executeQuery("SELECT * FROM timetableA");
                
                // Check if result set is empty
                boolean hasData = false; // Track if data is loaded
            while (rs.next()) {
                hasData = true; // Set to true if at least one row is loaded
                String[] row = {
                    rs.getString("time_slot"),
                    rs.getString("monday"),
                    rs.getString("tuesday"),
                    rs.getString("wednesday"),
                    rs.getString("thursday"),
                    rs.getString("friday")
                };
                model.addRow(row);
                System.out.println("Row added: " + String.join(", ", row)); // Debug output
            }
            if (!hasData) {
                JOptionPane.showMessageDialog(this, "No data found in timetableA table.", "Info", JOptionPane.INFORMATION_MESSAGE);
            }

            // Ensure the table is displayed correctly
            revalidate(); // Refresh the layout
            repaint();    // Repaint the JFrame
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Failed to load data from the database.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 839, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 476, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
     public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            new TimetableViewerA().setVisible(true);
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
