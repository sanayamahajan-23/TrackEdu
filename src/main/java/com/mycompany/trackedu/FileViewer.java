/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.trackedu;

/**
 *
 * @author divya
 */
import javax.swing.*;
import java.awt.*;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
public class FileViewer extends javax.swing.JFrame {
    private JLabel fileLabel;
    /**
     * Creates new form FileViewer
     */
    public FileViewer() {
        setTitle("File Viewer");
        setSize(817, 478);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        setLayout(new BorderLayout());

        fileLabel = new JLabel("No file to display", SwingConstants.CENTER);
        add(fileLabel, BorderLayout.CENTER);

        loadFileFromDatabase();
    }

    // Method to load file from the database and display it
    private void loadFileFromDatabase() {
        String dbUrl = "jdbc:mysql://localhost:3306/file_storage";
        String username = "root";
        String password = "admin";

        try (Connection conn = DriverManager.getConnection(dbUrl, username, password);
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery("SELECT file_name, file_data FROM uploaded_files ORDER BY id DESC LIMIT 1")) {

            if (rs.next()) {
                String fileName = rs.getString("file_name");
                InputStream fileData = rs.getBinaryStream("file_data");
                 System.out.println("Retrieved file name: " + fileName);
                 File tempFile = new File("temp_" + fileName);
            try (OutputStream os = new FileOutputStream(tempFile)) {
                byte[] buffer = new byte[1024];
                int bytesRead;

                while ((bytesRead = fileData.read(buffer)) != -1) {
                    os.write(buffer, 0, bytesRead);
                }
                System.out.println("File saved temporarily at: " + tempFile.getAbsolutePath());
                fileLabel.setText("File: " + tempFile.getAbsolutePath());
            }
                // If the file is an image, display it
                if (fileName.toLowerCase().endsWith(".jpg") || fileName.toLowerCase().endsWith(".jpeg") ||
                        fileName.toLowerCase().endsWith(".png") || fileName.toLowerCase().endsWith(".gif")|| fileName.toLowerCase().endsWith(".pdf")) {

                      ImageIcon imageIcon = new ImageIcon(tempFile.getAbsolutePath());
                fileLabel.setIcon(new ImageIcon(imageIcon.getImage().getScaledInstance(150, 150, Image.SCALE_SMOOTH)));

                } 
            } else {
                fileLabel.setText("No file found in database.");
                System.out.println("No records found in uploaded_files.");
            }
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error loading file!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    
        initComponents();
}
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 761, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 363, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            FileViewer fileViewer = new FileViewer();
            fileViewer.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser jFileChooser1;
    // End of variables declaration//GEN-END:variables
}
