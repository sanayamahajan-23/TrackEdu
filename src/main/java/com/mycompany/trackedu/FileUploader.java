/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.trackedu;

/**
 *
 * @author divya
 */
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
public class FileUploader extends javax.swing.JFrame {
 private JLabel fileLabel;
    private File selectedFile;
    /**
     * Creates new form FileUploader
     */
    public FileUploader() {
           setTitle("File Uploader");
        setSize(817, 478);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        setLayout(new BorderLayout());

        // Label to show selected file
        fileLabel = new JLabel("No file selected", SwingConstants.CENTER);
        add(fileLabel, BorderLayout.CENTER);

        // Buttons for uploading and saving the file
        JPanel buttonPanel = new JPanel();
        JButton uploadButton = new JButton("Upload File");
        JButton saveButton = new JButton("Save to Database");
        
        buttonPanel.add(uploadButton);
        buttonPanel.add(saveButton);
        add(buttonPanel, BorderLayout.SOUTH);

        // Action listener for Upload button
        uploadButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                uploadFile();
            }
        });

        // Action listener for Save button
        saveButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                saveFileToDatabase();
            }
        });
    }

    // Method to open file chooser and upload a file
    private void uploadFile() {
        JFileChooser fileChooser = new JFileChooser();
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            selectedFile = fileChooser.getSelectedFile();
            fileLabel.setText("Selected file: " + selectedFile.getName());

            // Display image if it's an image file
            if (isImageFile(selectedFile)) {
                ImageIcon imageIcon = new ImageIcon(selectedFile.getPath());
                fileLabel.setIcon(new ImageIcon(imageIcon.getImage().getScaledInstance(150, 150, Image.SCALE_SMOOTH)));
            } else {
                fileLabel.setIcon(null);
            }
        }
    }

    // Method to check if file is an image
    private boolean isImageFile(File file) {
        String fileName = file.getName().toLowerCase();
        return fileName.endsWith(".jpg") || fileName.endsWith(".jpeg") || fileName.endsWith(".png") || fileName.endsWith(".gif") || fileName.endsWith(".pdf");
    }

    // Method to save the file to the database
    private void saveFileToDatabase() {
        if (selectedFile == null) {
            JOptionPane.showMessageDialog(this, "No file selected!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String dbUrl = "jdbc:mysql://localhost:3306/file_storage";
        String username = "root";
        String password = "admin";

        try (Connection conn = DriverManager.getConnection(dbUrl, username, password)) {
            String query = "INSERT INTO uploaded_files (file_name, file_data) VALUES (?, ?)";
            PreparedStatement pstmt = conn.prepareStatement(query);
            pstmt.setString(1, selectedFile.getName());

            // Read file data as InputStream
            InputStream inputStream = new FileInputStream(selectedFile);
            pstmt.setBinaryStream(2, inputStream, (int) selectedFile.length());
           int rowsInserted = pstmt.executeUpdate();

        if (rowsInserted > 0) {
            JOptionPane.showMessageDialog(this, "File saved to database successfully!");
            System.out.println("File saved: " + selectedFile.getName() + ", Size: " + selectedFile.length());
        } else {
            System.out.println("File not saved.");
        }
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error saving file!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
   public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            FileUploader fileUploader = new FileUploader();
            fileUploader.setVisible(true);
        });
    }
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

}